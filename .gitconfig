[user]
    email = mnthe.dev@gmail.com
    name = JungHun Kim
#     signingkey = 

[commit]
#     gpgsign = true

[tag]
#     gpgsign = true

[rerere]
    enabled = true

[help]
    autocorrect = 1

[color]
    ui = auto

[core]
    eol = lf
    safecrlf = warn
    autocrlf = input

    excludesfile = ~/.gitignore
    whitespace=-indent-with-non-tab,trailing-space,cr-at-eol

[push]
    default = current
    autoSetupRemote = true
    followTags = true

[pull]
    rebase = true

[fetch]
    prune = true
    pruneTags = true

[core]
    editor = code --wait

[diff]
    mnemonicPrefix = true
    renames = true
    wordRegex = .
    submodule = log
    tool = vscode

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

[merge]
    renames = true
    tool = vscode
  
[mergetool "vscode"]
    cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED

[pack]
    packSizeLimit = 100m
    threads = 1
    deltaCacheSize = 512m
    windowMemory = 100m

[alias]
    s = status -s
    undo = reset --soft HEAD^
    staash = stash save --include-untracked
    l = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(red)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    pp = "!f() { git pull --rebase && git push $@; }; f"
    pu = "! [ -z $(git config \"branch.$(git symbolic-ref --short HEAD).merge\") ] && git push -u origin $(git symbolic-ref --short HEAD) || git push"
    ro =  "!f() { if [ ! -z "$1" ]; then git fetch && git rebase origin/$@; else echo $'No branch specified, doing nothing.'; fi }; f"
    rpu = "!f() { if [ ! -z "$1" ]; then git fetch && git rebase origin/$@ && git pu; else echo $'No branch specified, doing nothing.'; fi }; f"

[tag]
    sort = version:refname

[versionsort]
    prereleaseSuffix = -pre
    prereleaseSuffix = .pre
    prereleaseSuffix = -alpha
    prereleaseSuffix = .alpha
    prereleaseSuffix = -beta
    prereleaseSuffix = .beta
    prereleaseSuffix = -rc
    prereleaseSuffix = .rc
